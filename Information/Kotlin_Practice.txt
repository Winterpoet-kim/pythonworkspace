--------------------------------------------------

220405_day

코틀린 practice
 = play.kotlinlang.org

--------------------------------------------------

220407_night

free figma : 여러가지 디자인 툴


--------------------------------------------------

220408_day

1. import 설정 (plugin {} 하고 android{} 사이 바깥에 선언)
apply plugin: 'kotlin-android-extensions'



2. 뷰 바인딩

build.gradle 파일에 추가
https://developer.android.com/topic/libraries/view-binding

android {
        ...

        // 뷰 바인딩 옵션 활성화
        viewBinding {
            enabled = true
        }
    }
    

<뷰 바인딩 예제 소스코드>

// 전역 변수로 바인딩 객체 선언
private var mBinding:ActivityMainBinding? = null
// 매번 null 체크를 할 필요 없이 편의성을 위해 바인딩 변수 재선언
private val binding get() = mBinding!!

fun onCreate(savedInstanceState:Bundle?) {

    // 기존 setContentView 를 제거..
    // setContentView(R.layout.activity_main)

    // 액티비티에서 사용할 바인딩 클래스의 인스턴스 생성
    mBinding = ActivityMainBinding.inflate(layoutInflater)
    // getRoot 메서드로 레이아웃 내부의 최상위 뷰의 인스턴스를 활용하여 생성된뷰를 액티비티에 표시
    setContentView(binding.root)

    // binding 변수를 활용하여 xml 내의 뷰 id 접근 가능.
    // 네이밍규칙에 따라.. ex) id 자동변환 : tv_message -> tvMessage
    binding.[View_id].setText("...")
}

fun onDestroy(){
    mBinding = null
    super.onDestroy()
}




3. -> 가 무슨 의미인가 확인!!



4. 애니메이션 (.json)

lottieanimation
https://lottiefiles.com/
lottieanimation github

5. 상단 패키지명 없애기

res>values>themes 파일에서
<style ... .DarkActionBar> ->  <style ... .NoActionBar>


6. status 바 투명하게 만들기

res>values>themes 파일에 추가

<item name="android:windowTranslucentStatus">true</item>
<item name="android:windowTranslucentNavigation">true</item>


7. 동그라미 이미지뷰

gradle파일에 dependencies { } 안에 추가

implementation 'de.hdodenhof:circleimageview:3.1.0'


8. 플러그인 추가 (import kotlinx.android.synthetic.main. 관련..)

gradle파일에

plugins {
    id 'kotlin-android-extensions'
}


9. 추천 플러그인

(1) Rainbow Brackets : 괄호에 색상 적용
(2) Fast Scrolling : Ctrl 누르고 Scrolling 을 하면 더 빠름
(3) Code Glance : 전체 code minimap 을 보여줌


10. 아이콘 검색 (저작권 : 라이센스 확인필요)

https://www.flaticon.com/



